{"ast":null,"code":"var _jsxFileName = \"D:\\\\EXCERCISE\\\\Staycation\\\\bwamern\\\\src\\\\elements\\\\Form\\\\InputText\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport propTypes from \"prop-types\";\nimport \"./index.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Text(props) {\n  _s();\n  const {\n    value,\n    type,\n    placeholder,\n    name,\n    prepend,\n    append,\n    outerClassName,\n    inputClassName,\n    errorResponse\n  } = this.props;\n  const {\n    HasError,\n    setHasError\n  } = useState(null);\n  let pattern = \"\";\n  if (type === \"email\") pattern = /^[^\\s@+@[^\\s@].[^\\s@]+$/;\n  if (type === \"tel\") pattern = \"[0-9]*\";\n  const onChange = event => {\n    const target = {\n      target: {\n        name: name,\n        value: event.target.value\n      }\n    };\n  };\n  if (type === \"email\") {\n    if (!pattern.test(event.target.value)) setHasError(errorResponse);else setHasError(null);\n  }\n  if (type === \"tel\") {\n    if (event.target.validity.valid) props.onChange(target);\n  } else {\n    props.onChange(target);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: [\"input-text mb-3\", outerClassName].join(\" \"),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group\",\n      children: [prepend && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group-prepend bg-gray-900\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"input-group-text\",\n          children: prepend\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: name,\n        type: type,\n        pattern: pattern,\n        className: [\"form-control\", inputClassName].join(\" \"),\n        value: value,\n        placeholder: placeholder,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), append && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group-append bg-gray-900\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"input-group-text\",\n          children: append\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), HasError && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"error-helper\",\n      children: HasError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(Text, \"Hsi1k3cpci0dCo1mCasymw0pQN4=\");\n_c = Text;\nText.defaultProps = {\n  type: \"text\",\n  pattern: \"\",\n  placeholder: \"Please type here...\",\n  errorResponse: \"Please macth the requested format.\"\n};\nText.propTypes = {\n  name: propTypes.string.isRequired,\n  value: propTypes.oneOfType([propTypes.number, propTypes.string]).isRequired,\n  onChange: propTypes.func,\n  prepend: propTypes.oneOfType([propTypes.number, propTypes.string]),\n  append: propTypes.oneOfType([propTypes.number, propTypes.string]),\n  type: propTypes.string,\n  placeholder: propTypes.string,\n  outerClassName: propTypes.string,\n  inputClassName: propTypes.string\n};\nvar _c;\n$RefreshReg$(_c, \"Text\");","map":{"version":3,"names":["React","useState","propTypes","jsxDEV","_jsxDEV","Text","props","_s","value","type","placeholder","name","prepend","append","outerClassName","inputClassName","errorResponse","HasError","setHasError","pattern","onChange","event","target","test","validity","valid","className","join","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","defaultProps","string","isRequired","oneOfType","number","func","$RefreshReg$"],"sources":["D:/EXCERCISE/Staycation/bwamern/src/elements/Form/InputText/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport propTypes from \"prop-types\";\r\n\r\nimport \"./index.scss\";\r\n\r\nexport default function Text(props) {\r\n  const {\r\n    value,\r\n    type,\r\n    placeholder,\r\n    name,\r\n    prepend,\r\n    append,\r\n    outerClassName,\r\n    inputClassName,\r\n    errorResponse,\r\n  } = this.props;\r\n\r\n  const { HasError, setHasError } = useState(null);\r\n  let pattern = \"\";\r\n  if (type === \"email\") pattern = /^[^\\s@+@[^\\s@].[^\\s@]+$/;\r\n  if (type === \"tel\") pattern = \"[0-9]*\";\r\n\r\n  const onChange = (event) => {\r\n    const target = {\r\n      target: {\r\n        name: name,\r\n        value: event.target.value,\r\n      },\r\n    };\r\n  };\r\n\r\n  if (type === \"email\") {\r\n    if (!pattern.test(event.target.value)) setHasError(errorResponse);\r\n    else setHasError(null);\r\n  }\r\n\r\n  if (type === \"tel\") {\r\n    if (event.target.validity.valid) props.onChange(target);\r\n  } else {\r\n    props.onChange(target);\r\n  }\r\n\r\n  return (\r\n    <div className={[\"input-text mb-3\", outerClassName].join(\" \")}>\r\n      <div className=\"input-group\">\r\n        {prepend && (\r\n          <div className=\"input-group-prepend bg-gray-900\">\r\n            <span className=\"input-group-text\">{prepend}</span>\r\n          </div>\r\n        )}\r\n        <input\r\n          name={name}\r\n          type={type}\r\n          pattern={pattern}\r\n          className={[\"form-control\", inputClassName].join(\" \")}\r\n          value={value}\r\n          placeholder={placeholder}\r\n          onChange={onChange}\r\n        />\r\n        {append && (\r\n          <div className=\"input-group-append bg-gray-900\">\r\n            <span className=\"input-group-text\">{append}</span>\r\n          </div>\r\n        )}\r\n      </div>\r\n      {HasError && <span className=\"error-helper\">{HasError}</span>}\r\n    </div>\r\n  );\r\n}\r\n\r\nText.defaultProps = {\r\n  type: \"text\",\r\n  pattern: \"\",\r\n  placeholder: \"Please type here...\",\r\n  errorResponse: \"Please macth the requested format.\",\r\n};\r\nText.propTypes = {\r\n  name: propTypes.string.isRequired,\r\n  value: propTypes.oneOfType([propTypes.number, propTypes.string]).isRequired,\r\n  onChange: propTypes.func,\r\n  prepend: propTypes.oneOfType([propTypes.number, propTypes.string]),\r\n  append: propTypes.oneOfType([propTypes.number, propTypes.string]),\r\n  type: propTypes.string,\r\n  placeholder: propTypes.string,\r\n  outerClassName: propTypes.string,\r\n  inputClassName: propTypes.string,\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,YAAY;AAElC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,eAAe,SAASC,IAAIA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAClC,MAAM;IACJC,KAAK;IACLC,IAAI;IACJC,WAAW;IACXC,IAAI;IACJC,OAAO;IACPC,MAAM;IACNC,cAAc;IACdC,cAAc;IACdC;EACF,CAAC,GAAG,IAAI,CAACV,KAAK;EAEd,MAAM;IAAEW,QAAQ;IAAEC;EAAY,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAChD,IAAIkB,OAAO,GAAG,EAAE;EAChB,IAAIV,IAAI,KAAK,OAAO,EAAEU,OAAO,GAAG,yBAAyB;EACzD,IAAIV,IAAI,KAAK,KAAK,EAAEU,OAAO,GAAG,QAAQ;EAEtC,MAAMC,QAAQ,GAAIC,KAAK,IAAK;IAC1B,MAAMC,MAAM,GAAG;MACbA,MAAM,EAAE;QACNX,IAAI,EAAEA,IAAI;QACVH,KAAK,EAAEa,KAAK,CAACC,MAAM,CAACd;MACtB;IACF,CAAC;EACH,CAAC;EAED,IAAIC,IAAI,KAAK,OAAO,EAAE;IACpB,IAAI,CAACU,OAAO,CAACI,IAAI,CAACF,KAAK,CAACC,MAAM,CAACd,KAAK,CAAC,EAAEU,WAAW,CAACF,aAAa,CAAC,CAAC,KAC7DE,WAAW,CAAC,IAAI,CAAC;EACxB;EAEA,IAAIT,IAAI,KAAK,KAAK,EAAE;IAClB,IAAIY,KAAK,CAACC,MAAM,CAACE,QAAQ,CAACC,KAAK,EAAEnB,KAAK,CAACc,QAAQ,CAACE,MAAM,CAAC;EACzD,CAAC,MAAM;IACLhB,KAAK,CAACc,QAAQ,CAACE,MAAM,CAAC;EACxB;EAEA,oBACElB,OAAA;IAAKsB,SAAS,EAAE,CAAC,iBAAiB,EAAEZ,cAAc,CAAC,CAACa,IAAI,CAAC,GAAG,CAAE;IAAAC,QAAA,gBAC5DxB,OAAA;MAAKsB,SAAS,EAAC,aAAa;MAAAE,QAAA,GACzBhB,OAAO,iBACNR,OAAA;QAAKsB,SAAS,EAAC,iCAAiC;QAAAE,QAAA,eAC9CxB,OAAA;UAAMsB,SAAS,EAAC,kBAAkB;UAAAE,QAAA,EAAEhB;QAAO;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CACN,eACD5B,OAAA;QACEO,IAAI,EAAEA,IAAK;QACXF,IAAI,EAAEA,IAAK;QACXU,OAAO,EAAEA,OAAQ;QACjBO,SAAS,EAAE,CAAC,cAAc,EAAEX,cAAc,CAAC,CAACY,IAAI,CAAC,GAAG,CAAE;QACtDnB,KAAK,EAAEA,KAAM;QACbE,WAAW,EAAEA,WAAY;QACzBU,QAAQ,EAAEA;MAAS;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC,EACDnB,MAAM,iBACLT,OAAA;QAAKsB,SAAS,EAAC,gCAAgC;QAAAE,QAAA,eAC7CxB,OAAA;UAAMsB,SAAS,EAAC,kBAAkB;UAAAE,QAAA,EAAEf;QAAM;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,EACLf,QAAQ,iBAAIb,OAAA;MAAMsB,SAAS,EAAC,cAAc;MAAAE,QAAA,EAAEX;IAAQ;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAEV;AAACzB,EAAA,CAhEuBF,IAAI;AAAA4B,EAAA,GAAJ5B,IAAI;AAkE5BA,IAAI,CAAC6B,YAAY,GAAG;EAClBzB,IAAI,EAAE,MAAM;EACZU,OAAO,EAAE,EAAE;EACXT,WAAW,EAAE,qBAAqB;EAClCM,aAAa,EAAE;AACjB,CAAC;AACDX,IAAI,CAACH,SAAS,GAAG;EACfS,IAAI,EAAET,SAAS,CAACiC,MAAM,CAACC,UAAU;EACjC5B,KAAK,EAAEN,SAAS,CAACmC,SAAS,CAAC,CAACnC,SAAS,CAACoC,MAAM,EAAEpC,SAAS,CAACiC,MAAM,CAAC,CAAC,CAACC,UAAU;EAC3EhB,QAAQ,EAAElB,SAAS,CAACqC,IAAI;EACxB3B,OAAO,EAAEV,SAAS,CAACmC,SAAS,CAAC,CAACnC,SAAS,CAACoC,MAAM,EAAEpC,SAAS,CAACiC,MAAM,CAAC,CAAC;EAClEtB,MAAM,EAAEX,SAAS,CAACmC,SAAS,CAAC,CAACnC,SAAS,CAACoC,MAAM,EAAEpC,SAAS,CAACiC,MAAM,CAAC,CAAC;EACjE1B,IAAI,EAAEP,SAAS,CAACiC,MAAM;EACtBzB,WAAW,EAAER,SAAS,CAACiC,MAAM;EAC7BrB,cAAc,EAAEZ,SAAS,CAACiC,MAAM;EAChCpB,cAAc,EAAEb,SAAS,CAACiC;AAC5B,CAAC;AAAC,IAAAF,EAAA;AAAAO,YAAA,CAAAP,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}